install.packages(Funmodeling)
"funModeling"
install.packages("Funmodeling")
install.packages("funModeling")
install.packages("lsr")
isntall.packages("swirl")
install.packages("swirl")
install.packages("psych")
library(psych)
install.packages("XLConnect")
library(XLConnect)
f1=jitter(sample(c(2,3),1));f2=jitter(sample(c(2,3),1));f3=jitter(sample(c(2,3),1));f4=jitter(sample(c(2,3),1))
d1=runif(1,0,1e-02);d2=runif(1,0,1e-02);d3=runif(1,0,1e-02);d4=runif(1,0,1e-02)
p1=runif(1,0,pi);p2=runif(1,0,pi);p3=runif(1,0,pi);p4=runif(1,0,pi)
xt = function(t) exp(-d1*t)*sin(t*f1+p1)+exp(-d2*t)*sin(t*f2+p2)
yt = function(t) exp(-d3*t)*sin(t*f3+p3)+exp(-d4*t)*sin(t*f4+p4)
t=seq(1, 100, by=.001)
dat=data.frame(t=t, x=xt(t), y=yt(t))
with(dat, plot(x,y, type="l", xlim =c(-2,2), ylim =c(-2,2), xlab = "", ylab = "", xaxt='n', yaxt='n'))
Share this:
Click to share on Twitter (Opens in new window)Click to share on Facebook (Opens in new window)Click to share on LinkedIn (Opens in new window)Click to share on Google+ (Opens in new window)Click to share on WhatsApp (Opens in new window)Click to email this to a friend (Opens in new window)
f1=jitter(sample(c(2,3),1));f2=jitter(sample(c(2,3),1));f3=jitter(sample(c(2,3),1));f4=jitter(sample(c(2,3),1))
d1=runif(1,0,1e-02);d2=runif(1,0,1e-02);d3=runif(1,0,1e-02);d4=runif(1,0,1e-02)
p1=runif(1,0,pi);p2=runif(1,0,pi);p3=runif(1,0,pi);p4=runif(1,0,pi)
xt = function(t) exp(-d1*t)*sin(t*f1+p1)+exp(-d2*t)*sin(t*f2+p2)
yt = function(t) exp(-d3*t)*sin(t*f3+p3)+exp(-d4*t)*sin(t*f4+p4)
t=seq(1, 100, by=.001)
dat=data.frame(t=t, x=xt(t), y=yt(t))
with(dat, plot(x,y, type="l", xlim =c(-2,2), ylim =c(-2,2), xlab = "", ylab = "", xaxt='n', yaxt='n'))
f1=jitter(sample(c(2,3),1));f2=jitter(sample(c(2,3),1));f3=jitter(sample(c(2,3),1));f4=jitter(sample(c(2,3),1))
d1=runif(1,0,1e-02);d2=runif(1,0,1e-02);d3=runif(1,0,1e-02);d4=runif(1,0,1e-02)
p1=runif(1,0,pi);p2=runif(1,0,pi);p3=runif(1,0,pi);p4=runif(1,0,pi)
xt = function(t) exp(-d1*t)*sin(t*f1+p1)+exp(-d2*t)*sin(t*f2+p2)
yt = function(t) exp(-d3*t)*sin(t*f3+p3)+exp(-d4*t)*sin(t*f4+p4)
t=seq(1, 100, by=.001)
dat=data.frame(t=t, x=xt(t), y=yt(t))
with(dat, plot(x,y, type="l", xlim =c(-2,2), ylim =c(-2,2), xlab = "", ylab = "", xaxt='n', yaxt='n'))
f1=jitter(sample(c(2,3),1));f2=jitter(sample(c(2,3),1));f3=jitter(sample(c(2,3),1));f4=jitter(sample(c(2,3),1))
d1=runif(1,0,1e-02);d2=runif(1,0,1e-02);d3=runif(1,0,1e-02);d4=runif(1,0,1e-02)
p1=runif(1,0,pi);p2=runif(1,0,pi);p3=runif(1,0,pi);p4=runif(1,0,pi)
xt = function(t) exp(-d1*t)*sin(t*f1+p1)+exp(-d2*t)*sin(t*f2+p2)
yt = function(t) exp(-d3*t)*sin(t*f3+p3)+exp(-d4*t)*sin(t*f4+p4)
t=seq(1, 100, by=.001)
dat=data.frame(t=t, x=xt(t), y=yt(t))
with(dat, plot(x,y, type="l", xlim =c(-2,2), ylim =c(-2,2), xlab = "", ylab = "", xaxt='n', yaxt='n'))
f1=jitter(sample(c(2,3),1));f2=jitter(sample(c(2,3),1));f3=jitter(sample(c(2,3),1));f4=jitter(sample(c(2,3),1))
d1=runif(1,0,1e-02);d2=runif(1,0,1e-02);d3=runif(1,0,1e-02);d4=runif(1,0,1e-02)
p1=runif(1,0,pi);p2=runif(1,0,pi);p3=runif(1,0,pi);p4=runif(1,0,pi)
xt = function(t) exp(-d1*t)*sin(t*f1+p1)+exp(-d2*t)*sin(t*f2+p2)
yt = function(t) exp(-d3*t)*sin(t*f3+p3)+exp(-d4*t)*sin(t*f4+p4)
t=seq(1, 100, by=.001)
dat=data.frame(t=t, x=xt(t), y=yt(t))
with(dat, plot(x,y, type="l", xlim =c(-2,2), ylim =c(-2,2), xlab = "", ylab = "", xaxt='n', yaxt='n'))
install.packages("magritter")
install.packages("magrittr")
library(magrittr)
library(ggplot2)
opt = theme(legend.position  = "none",
panel.background = element_rect(fill="violetred4"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
seq(from=-10, to=10, by = 0.05) %>%
expand.grid(x=., y=.) %>%
#HERE COMES THE KIDNAPPED LINE
geom_point(alpha=.1, shape=20, size=1, color="white") + opt
library(magrittr)
library(ggplot2)
opt = theme(legend.position  = "none",
panel.background = element_rect(fill="violetred4"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
seq(from=-10, to=10, by = 0.05) %>%
expand.grid(x=., y=.) %>%
#HERE COMES THE KIDNAPPED LINE
geom_point(alpha=.1, shape=20, size=1, color="white") + opt
library(magrittr)
library(ggplot2)
opt = theme(legend.position  = "none",
panel.background = element_rect(fill="violetred4"),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
seq(from=-10, to=10, by = 0.05) %>%
expand.grid(x=., y=.) %>%
#HERE COMES THE KIDNAPPED LINE
geom_point(aes(alpha=.1, shape=20, size=1, color="white") + opt
)
library("magrittr")
library("ggplot2")
library("pracma")
RecurrencePlot = function(from, to, col1, col2) {
opt = theme(legend.position  = "none",
panel.background = element_blank(),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
seq(from, to, by = .1) %>% expand.grid(x=., y=.) %>%
ggplot( ., aes(x=x, y=y, fill=erf(sec(x)-sec(y)))) + geom_tile() +
scale_fill_gradientn(colours=colorRampPalette(c(col1, col2))(2)) + opt}
RecurrencePlot(from = -5*pi, to = 5*pi, col1 = "black", col2= "white")
install.packages("pracma")
library("magrittr")
library("ggplot2")
library("pracma")
RecurrencePlot = function(from, to, col1, col2) {
opt = theme(legend.position  = "none",
panel.background = element_blank(),
axis.ticks       = element_blank(),
panel.grid       = element_blank(),
axis.title       = element_blank(),
axis.text        = element_blank())
seq(from, to, by = .1) %>% expand.grid(x=., y=.) %>%
ggplot( ., aes(x=x, y=y, fill=erf(sec(x)-sec(y)))) + geom_tile() +
scale_fill_gradientn(colours=colorRampPalette(c(col1, col2))(2)) + opt}
RecurrencePlot(from = -5*pi, to = 5*pi, col1 = "black", col2= "white")
getwd()
setwd("GitHub/Regresion/")
datos <- read.csv("EXR_C07_S04_01.csv")
View(datos)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment <- as.factor(c(rep(1,11)),rep(2,11))
c(rep(1,11),rep(2,11))
treatment <- as.factor( c(rep(1,11),rep(2,11)),labels=c("placebo","methadone"))
?factor
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Mathadone"))
treatment
datos <- data.frame(treatment,c(datos$Plac,datos$Meth))
View(datos)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Mathadone"))
datos <- data.frame(treatment,c(datos$Plac,datos$Meth))
View(datos)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Mathadone"))
datos <- data.frame(treatment,c(datos$Plac,datos$Meth))
View(datos)
rm(list=ls())
## importar los datos y acomodarlos
```{r}
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Mathadone"))
datos <- data.frame(treatment,score)
score <- c(datos$Plac,datos$Meth)
datos <- data.frame(treatment,score)
View(datos)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Mathadone"))
score <- c(datos$Plac,datos$Meth)
datos <- data.frame(treatment,score)
View(datos)
treatment
?var.test
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/Regresion/t-student.R', echo=TRUE)
getwd()
#Basic Statistical Methods
# t-Test and ANOVA
# t-Test determine if the averages of two variables are different
# One-way ANOVA of the averages of n-variables, at least two are different
#
# From Daniel Chapter 7 exercise 3.3
#
library(tidyverse)
Ex733 = read.csv(file="EXR_C07_S03_03.csv", header=TRUE)
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
NoOSAS = Ex733$Length[Ex733$Group == 1]
OSAS = Ex733$Length[Ex733$Group == 2]
boxplot(NoOSAS,OSAS)
#
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
t.test(NoOSAS, OSAS, alternative="less", mu=0, var.equal = FALSE, conf.level=0.99)
#
boxplot(Length ~ Group, data=Ex733)
t.test(Length ~ Group, data=Ex733, alternative="two.sided", var.equal = FALSE, conf.level=0.99)
#
ggplot(data = Ex733, aes(y = Length, group = Group)) + geom_boxplot()
datos$score[datos$treatment =="Methadone"]
datos$treatment
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos <- data.frame(treatment,score)
View(datos)
datos$score[datos$treatment =="Methadone"]
datos$score[datos$treatment =="Placebo"]
variance_test <- var.test(datos$score[datos$treatment=="Placebo"],datos$score[datos$treatment =="Methadone"])
variance_test
```{r}
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
View(datos)
variance_test <- var.test(datos$score[datos$treatment=="Placebo"],datos$score[datos$treatment =="Methadone"])
variance_test
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos <- data.frame(treatment,score)
View(datos)
variance_test <- var.test(datos$score[datos$treatment=="Placebo"],datos$score[datos$treatment =="Methadone"])
variance_test
png("datos.png")
library(tidyverse)
datos1 <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos2 <- data.frame(treatment,score)
datos <- read.csv("EXR_C07_S04_03.csv")
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos2 <- data.frame(treatment,score)
ls
rm(list=ls())
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos2 <- data.frame(treatment,score)
View(datos2)
variance_test <- var.test(datos2$score[datos$treatment=="Placebo"],datos2$score[datos2$treatment =="Methadone"])
variance_test <- var.test(datos2$score[datos2$treatment=="Placebo"],datos2$score[datos2$treatment =="Methadone"])
variance_test
png("datos2.png")
View(datos2)
dev.off()
install.packages("gridExtra")
library(gridExtra)
png("test.png", height = 50*nrow(df), width = 200*ncol(df))
grid.table(datos2)
dev.off()
getwd()
getwd
getwd
library(gridExtra)
png("test.png", height = 50*nrow(df), width = 200*ncol(df))
grid.table(datos2)
library(gridExtra)
png("test.png", height = 50*nrow(df), width = 200*ncol(df))
grid.table(datos2)
dev.off
library(gridExtra)
png("test.png", height = 50*nrow(df), width = 200*ncol(df))
grid.table(datos2)
plot <- ggplot(data = datos2,
ggplot(data = datos2,
mapping = aes(x=treatment,y=score)+
geom_boxplot()
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()
points(datos2$score~ datos2$treatment)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()
points(datos2$score~ datos2$treatment)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
points(datos2$score~ datos2$treatment)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter()
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.5,width = 0.5)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.05,width = 0.05)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.02,width = 0.02)
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.03,width = 0.03)
png
?t.test
comparison <- t.test(score~treatment,data = datos2,paired=T)
comparison <- t.test(score~treatment,data = datos2,paired=T)
comparison
t.test(datos$Meth,datos$Plac,paired = T)
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos2 <- data.frame(treatment,score)
View(datos2)
variance_test <- var.test(datos2$score[datos2$treatment=="Placebo"],datos2$score[datos2$treatment =="Methadone"])
variance_test
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.03,width = 0.03)
comparison <- t.test(score~treatment,data = datos2,paired=T)
comparison
unlink('tarea_t_student_cache', recursive = TRUE)
comparison <- t.test(score~treatment,data = datos2,paired=T)
library(tidyverse)
datos <- read.csv("EXR_C07_S04_03.csv")
View(datos)
treatment  <- factor( c(rep(1,11),rep(2,11)),
labels = c("Placebo","Methadone"))
score <- c(datos$Plac,datos$Meth)
datos2 <- data.frame(treatment,score)
View(datos2)
variance_test <- var.test(datos2$score[datos2$treatment=="Placebo"],datos2$score[datos2$treatment =="Methadone"])
variance_test
ggplot(data = datos2,
mapping = aes(x=treatment,y=score))+
geom_boxplot()+
geom_point()+
geom_jitter(height = 0.03,width = 0.03)
comparison <- t.test(score~treatment,data = datos2,paired=T)
comparison

install.packages("foreign")
quit
quit()
source('~/Documentos/github/Regresion/codigo_wcgs.R', echo=TRUE)
setwd("~/Documentos/github/Regresion/")
source('~/Documentos/github/Regresion/codigo_wcgs.R', echo=TRUE)
pairs(~wdc)
pairs(~ wcgs)
source('~/Documentos/github/Regresion/codigo_wcgs.R', echo=TRUE)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class,size=2))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue", size=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "blue"), size=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size= class))
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size= cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty),size = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty),size = 4)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty),size = 3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty),size = 2.5)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty),size = 4
)
sunflowerplot(mpg$model,mpg$year)
sunflowerplot(mpg$hwy,mpg$class)
sunflowerplot(mpg$hwy,mpg$cyl)
dev.off()
sunflowerplot(mpg$hwy,mpg$cyl)
sunflowerplot(mpg$cyl,mpg$hwy)
sunflowerplot(mpg$cyl,mpg$year)
sunflowerplot(mpg$cyl,mpg$model)
sunflowerplot(mpg$cyl,mpg$drv)
sunflowerplot(mpg$cyl,mpg$cty)
sunflowerplot(mpg$cyl,mpg$cyl)
sunflowerplot(mpg$cyl,mpg$model)
sunflowerplot(mpg$cyl,mpg$year)
sunflowerplot(mpg$year,mpg$cyl)
rm(list=ls())
dev.off()
source('~/Documentos/github/Regresion/codigo_wcgs.R', echo=TRUE)
pwd()
getwd()
source('~/Documentos/github/Regresion/t-student.R', echo=TRUE)
# t-Test and ANOVA
# t-Test determine if the averages of two variables are different
# One-way ANOVA of the averages of n-variables, at least two are different
#
# From Daniel Chapter 7 exercise 3.3
#
library(tidyverse)
Ex733 = read.csv(file="DataOther/EXR_C07_S03_03.csv", header=TRUE)
Ex733 = read.csv(file="EXR_C07_S03_03.csv", header=TRUE)
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
NoOSAS = Ex733$Length[Ex733$Group == 1]
OSAS = Ex733$Length[Ex733$Group == 2]
boxplot(NoOSAS,OSAS)
#
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
t.test(NoOSAS, OSAS, alternative="less", mu=0, var.equal = FALSE, conf.level=0.99)
#
boxplot(Length ~ Group, data=Ex733)
t.test(Length ~ Group, data=Ex733, alternative="two.sided", var.equal = FALSE, conf.level=0.99)
#
ggplot(data = Ex733, aes(y = Length, group = Group)) + geom_boxplot()
# Prob 7.4.2
#
Ex742 <- read.csv(file="DataOther/EXR_C07_S04_02.csv", header=TRUE)
#
boxplot(Ex742)
# Prob 7.4.2
#
Ex742 <- read.csv(file="EXR_C07_S04_02.csv", header=TRUE)
rm(list=ls())
dev.off()
source('~/Documentos/github/Regresion/t-student.R', echo=TRUE)
#Basic Statistical Methods
# t-Test and ANOVA
# t-Test determine if the averages of two variables are different
# One-way ANOVA of the averages of n-variables, at least two are different
#
# From Daniel Chapter 7 exercise 3.3
#
library(tidyverse)
Ex733 = read.csv(file="EXR_C07_S03_03.csv", header=TRUE)
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
NoOSAS = Ex733$Length[Ex733$Group == 1]
OSAS = Ex733$Length[Ex733$Group == 2]
boxplot(NoOSAS,OSAS)
#
var.test(Ex733$Length[Ex733$Group == 2], Ex733$Length[Ex733$Group == 1])
t.test(NoOSAS, OSAS, alternative="less", mu=0, var.equal = FALSE, conf.level=0.99)
#
boxplot(Length ~ Group, data=Ex733)
t.test(Length ~ Group, data=Ex733, alternative="two.sided", var.equal = FALSE, conf.level=0.99)
#
ggplot(data = Ex733, aes(y = Length, group = Group)) + geom_boxplot()
# Prob 7.4.2
#
Ex742 <- read.csv(file="EXR_C07_S04_02.csv", header=TRUE)
#
boxplot(Ex742)
# varianzas son iguales
t.test(Ex742$Base, Ex742$Follow, alternative="g", mu=0, paired=TRUE, var.equal=TRUE)
# ggplot(data = Ex742, mapping = aes(y=Follow, x=Base)) + geom_boxplot()
#
hers <- read_csv("DataRegressBook/Chap3/hersdata.csv")
library(tidyverse)
```{r}
```{r}
libarary(tidyverse_conflicts())
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mgp)+
geom_point(mapping = aes(x= hwy,y=cyl)
ggplot(data = mgp)+
geom_point(mapping = aes(x= hwy,y=cyl))
ggplot(data = mpg)+
geom_point(mapping = aes(x= hwy,y=cyl))
ggplot(data = mpg)+
geom_point(mapping = aes(x= cyl,y=hwy))
ggplot(data=mpg)+
geom_point(mapping = aes(x=drv,y=class))
source('~/Documentos/github/Regresion/ejercicios_ggpot.R', echo=TRUE)
plot(cars)
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)+
geom_point(mapping = aes(x= cyl,y=hwy))
ggplot(data=mpg)+
geom_point(mapping = aes(x=drv,y=class))
mpg
ggplot(data = mpg)+
geom_point(mapping=aes(x=displ,y=hwy),color=class)
ggplot(data = mpg)+
geom_point(mapping=aes(x=displ,y=hwy),color=class))
ggplot(data = mpg)+
geom_point(mapping=aes(x=displ,y=hwy),color=class))
ggplot(data = mpg)
geom_point(mapping = aes(x=displ,y=hwy)color=class)
geom_point(mapping = aes(x=displ,y=hwy)color=class))
geom_point(mapping = aes(x=displ,y=hwy),color=class))
geom_point(mapping = aes(x=displ,y=hwy),color=class)
geom_point(mapping = aes(x=displ,y=hwy,color=class))
ggplot(data = mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color=class))
ggplot(data = mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color=class,size=2))
ggplot(data = mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color=class,size=1.5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
library(knitr)
## left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy ,color = "blue"))
library(tidyverse)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)+
geom_point(mapping = aes(x= cyl,y=hwy))
ggplot(data=mpg)+
geom_point(mapping = aes(x=drv,y=class))
ggplot(data = mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color=class,size=1.5))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
## left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy ,color = "blue"))
str(mpg)
mpg$displ
?facet_wrap
ggplot(data = mpg)+
geom_point(mapping = aes(x = displ, y =hwy))+
facet_wrap(~class, nrow=2)
ggplot(data = mpg)+
geom_point(mapping = aes(x=displ,y=hwy))+
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
getwd()
?barplot
x <- c(1,2)
x <- c(1,2)
y <- c(2, 3, 2, 1, 2, 1, 2)
plot(1,y)
plot(x,y)
x <- factor(c(rep(1,7),rep(2,7)))
x <- factor(c(rep(1,7),rep(2,7)),labels = c("antes","despues"))
x
y <- rnorm(14,4,1)
y
my_data <- data.frame(x,y)
my_data
plot(my_data)
plot(my_data$x,my_data$y)
plot(my_data$x,my_data$y,type="l")
plot(my_data$x,my_data$y,type="l")
plot(my_data$x,my_data$y,type="h")
dev.off()
plot(1,2)
points(my_data)
points(my_data$x,my_data$y)
my_data
before <- c(1,30,23,40)
after <- c(20,10,20,60)
# Create a new dataframe with columns:
# 'score', 'when' and 'unit'
# 'when' and 'unit' are set to factors
before.new <- data.frame(score = before, when = "Before",
unit = factor(1:4))
after.new <- data.frame(score = after, when = "After",
unit = factor(1:4))
df.new <- rbind(before.new, after.new)
#display df.new to see the structure
df.new
# load nlme
library(nlme)
#attach the dataframe to call variables directly
attach(df.new)
#create plot
interaction.plot(when, unit, score, ylab = "Score", xlab = "When",
col = rainbow(4))
interaction.plot(x,y)
interaction.plot(my_data)
library(nlme)
before <- c(1,30,23,40)
after <- c(20,10,20,60)
# Create a new dataframe with columns:
# 'score', 'when' and 'unit'
# 'when' and 'unit' are set to factors
before.new <- data.frame(score = before, when = "Before",
unit = factor(1:4))
after.new <- data.frame(score = after, when = "After",
unit = factor(1:4))
df.new <- rbind(before.new, after.new)
#display df.new to see the structure
df.new
# load nlme
library(nlme)
#attach the dataframe to call variables directly
attach(df.new)
#create plot
interaction.plot(when, unit, score, ylab = "Score", xlab = "When",
col = rainbow(4))
# detach df.new to clean up
detach(df.new)
before <- c(1,30,23,40)
after <- c(20,10,20,60)
# Create a new dataframe with columns:
# 'score', 'when' and 'unit'
# 'when' and 'unit' are set to factors
before.new <- data.frame(score = before, when = "Before",
unit = factor(1:4))
after.new <- data.frame(score = after, when = "After",
unit = factor(1:4))
df.new <- rbind(before.new, after.new)
#display df.new to see the structure
df.new
# load nlme
library(nlme)
#attach the dataframe to call variables directly
attach(df.new)
#create plot
interaction.plot(when, unit, score, ylab = "Score", xlab = "When",
col = rainbow(4))
# detach df.new to clean up
detach(df.new)
points(before.new$score)
